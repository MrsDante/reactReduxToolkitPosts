{"ast":null,"code":"import { createSlice, createAsyncThunk, createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { sub } from 'date-fns';\nimport axios from \"axios\";\nconst POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst postsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.date.localeCompare(a.date)\n});\nconst initialState = postsAdapter.getInitialState({\n  //posts: [],\n  status: 'idle',\n  //'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null,\n  count: 0\n});\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get(POSTS_URL);\n  return response.data;\n});\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async initialPost => {\n  const response = await axios.post(POSTS_URL, initialPost);\n  return response.data;\n});\nexport const updatePost = createAsyncThunk('posts/updatePost', async initialPost => {\n  const {\n    id\n  } = initialPost;\n  try {\n    const response = await axios.put(`${POSTS_URL}/${id}`, initialPost);\n    return response.data;\n  } catch (err) {\n    //return initialPost; \n    return initialPost;\n  }\n});\nexport const deletePost = createAsyncThunk('posts/deletePost', async initialPost => {\n  const {\n    id\n  } = initialPost;\n  try {\n    const response = await axios.delete(`${POSTS_URL}/${id}`);\n    if ((response === null || response === void 0 ? void 0 : response.status) === 200) return initialPost;\n    return `${response === null || response === void 0 ? void 0 : response.status}: ${response === null || response === void 0 ? void 0 : response.statusText}`;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      //const existingPost = state.posts.find(post => post.id === postId)\n      const existingPost = state.posts[postId];\n      if (existingPost) {\n        existingPost.reactions[reaction]++;\n      }\n    },\n    increaseCount(state, action) {\n      state.count = state.count + 1;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      let min = 1;\n      const loadedPosts = action.payload.map(post => {\n        post.date = sub(new Date(), {\n          minutes: min++\n        }).toISOString();\n        post.reactions = {\n          thumbsUp: 0,\n          wow: 0,\n          heart: 0,\n          rocket: 0,\n          coffee: 0\n        };\n        return post;\n      });\n      state.posts = state.posts.concat(loadedPosts);\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addNewPost.fulfilled, (state, action) => {\n      const sortedPosts = state.posts.sort((a, b) => {\n        if (a.id > b.id) return 1;\n        if (a.id < b.id) return -1;\n        return 0;\n      });\n      action.payload.id = sortedPosts[sortedPosts.length - 1].id + 1;\n      action.payload.userId = Number(action.payload.userId);\n      action.payload.date = new Date().toISOString();\n      action.payload.reactions = {\n        thumbsUp: 0,\n        wow: 0,\n        heart: 0,\n        rocket: 0,\n        coffee: 0\n      };\n      console.log(action.payload);\n      state.posts.push(action.payload);\n    }).addCase(updatePost.fulfilled, (state, action) => {\n      var _action$payload;\n      if (!((_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.id)) {\n        console.log('Update could not complete');\n        console.log(action.payload);\n        return;\n      }\n      const {\n        id\n      } = action.payload;\n      action.payload.date = new Date().toISOString();\n      const posts = state.posts.filter(post => post.id !== id);\n      state.posts = [...posts, action.payload];\n    }).addCase(deletePost.fulfilled, (state, action) => {\n      var _action$payload2;\n      if (!((_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 && _action$payload2.id)) {\n        console.log('Delete could not complete');\n        console.log(action.payload);\n        return;\n      }\n      const {\n        id\n      } = action.payload;\n      const posts = state.posts.filter(post => post.id !== id);\n      state.posts = posts;\n    });\n  }\n});\nexport const selectAllPosts = state => state.posts.posts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;\nexport const getCount = state => state.posts.count;\nexport const selectPostById = (state, postId) => state.posts.posts.find(post => post.id === postId);\nexport const selectPostByUser = createSelector([selectAllPosts, (state, userId) => userId], (posts, userId) => posts.filter(post => post.userId === userId));\nexport const {\n  increaseCount,\n  reactionAdded\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createSelector","createEntityAdapter","sub","axios","POSTS_URL","postsAdapter","sortComparer","a","b","date","localeCompare","initialState","getInitialState","status","error","count","fetchPosts","response","get","data","addNewPost","initialPost","post","updatePost","id","put","err","deletePost","delete","statusText","message","postsSlice","name","reducers","reactionAdded","state","action","postId","reaction","payload","existingPost","posts","reactions","increaseCount","extraReducers","builder","addCase","pending","fulfilled","min","loadedPosts","map","Date","minutes","toISOString","thumbsUp","wow","heart","rocket","coffee","concat","rejected","sortedPosts","sort","length","userId","Number","console","log","push","filter","selectAllPosts","getPostsStatus","getPostsError","getCount","selectPostById","find","selectPostByUser","actions","reducer"],"sources":["/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/postsSlice.js"],"sourcesContent":["import { \n    createSlice, \n    createAsyncThunk, \n    createSelector,\n    createEntityAdapter\n} from \"@reduxjs/toolkit\";\nimport { sub } from 'date-fns';\nimport axios from \"axios\";\n\nconst POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nconst postsAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.date.localeCompare(a.date)\n});\n\nconst initialState = postsAdapter.getInitialState({\n    //posts: [],\n    status: 'idle', //'idle' | 'loading' | 'succeeded' | 'failed'\n    error: null,\n    count: 0\n});\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const response = await axios.get(POSTS_URL)\n    return response.data\n})\n\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async (initialPost) => {\n    const response = await axios.post(POSTS_URL, initialPost)\n    return response.data\n})\n\nexport const updatePost = createAsyncThunk('posts/updatePost', async (initialPost) => {\n    const { id } = initialPost;\n    try {\n        const response = await axios.put(`${POSTS_URL}/${id}`, initialPost)\n        return response.data\n    } catch (err) {\n        //return initialPost; \n        return initialPost;\n    }\n})\n\nexport const deletePost = createAsyncThunk('posts/deletePost', async (initialPost) => {\n    const { id } = initialPost;\n    try {\n        const response = await axios.delete(`${POSTS_URL}/${id}`)\n        if (response?.status === 200) return initialPost;\n        return `${response?.status}: ${response?.statusText}`;\n    } catch (err) {\n        return err.message;\n    }\n})\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {\n        reactionAdded(state, action) {\n            const { postId, reaction } = action.payload\n            //const existingPost = state.posts.find(post => post.id === postId)\n            const existingPost = state.posts[postId];\n            if (existingPost) {\n                existingPost.reactions[reaction]++\n            }\n        },\n        increaseCount(state, action) {\n            state.count = state.count + 1;\n        }\n    },\n    extraReducers(builder) {\n        builder\n            .addCase(fetchPosts.pending, (state, action) => {\n                state.status = 'loading'\n            })\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                state.status = 'succeeded'\n                let min = 1;\n                const loadedPosts = action.payload.map(post => {\n                    post.date = sub(new Date(), { minutes: min++ }).toISOString();\n                    post.reactions = {\n                        thumbsUp: 0,\n                        wow: 0,\n                        heart: 0,\n                        rocket: 0,\n                        coffee: 0\n                    }\n                    return post;\n                });\n\n                state.posts = state.posts.concat(loadedPosts)\n            })\n            .addCase(fetchPosts.rejected, (state, action) => {\n                state.status = 'failed'\n                state.error = action.error.message\n            })\n            .addCase(addNewPost.fulfilled, (state, action) => {\n                const sortedPosts = state.posts.sort((a, b) => {\n                    if (a.id > b.id) return 1\n                    if (a.id < b.id) return -1\n                    return 0\n                })\n                action.payload.id = sortedPosts[sortedPosts.length - 1].id + 1;\n\n                action.payload.userId = Number(action.payload.userId)\n                action.payload.date = new Date().toISOString();\n                action.payload.reactions = {\n                    thumbsUp: 0,\n                    wow: 0,\n                    heart: 0,\n                    rocket: 0,\n                    coffee: 0\n                }\n                console.log(action.payload)\n                state.posts.push(action.payload)\n            })\n            .addCase(updatePost.fulfilled, (state, action) => {\n                if (!action.payload?.id) {\n                    console.log('Update could not complete')\n                    console.log(action.payload)\n                    return;\n                }\n                const { id } = action.payload;\n                action.payload.date = new Date().toISOString();\n                const posts = state.posts.filter(post => post.id !== id);\n                state.posts = [...posts, action.payload];\n            })\n            .addCase(deletePost.fulfilled, (state, action) => {\n                if (!action.payload?.id) {\n                    console.log('Delete could not complete')\n                    console.log(action.payload)\n                    return;\n                }\n                const { id } = action.payload;\n                const posts = state.posts.filter(post => post.id !== id);\n                state.posts = posts;\n            })\n    }\n})\n\nexport const selectAllPosts = (state) => state.posts.posts;\nexport const getPostsStatus = (state) => state.posts.status;\nexport const getPostsError = (state) => state.posts.error;\nexport const getCount = (state) => state.posts.count;\n\nexport const selectPostById = (state, postId) =>\n    state.posts.posts.find(post => post.id === postId);\n\nexport const selectPostByUser = createSelector(\n    [selectAllPosts, (state, userId) => userId],\n    (posts, userId) => posts.filter(post => post.userId === userId)\n);\n\nexport const { increaseCount, reactionAdded } = postsSlice.actions\n\nexport default postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}