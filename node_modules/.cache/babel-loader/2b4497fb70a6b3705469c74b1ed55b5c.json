{"ast":null,"code":"var _jsxFileName = \"/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postAdded } from './postsSlice';\nimport { addNewPost } from './postsSlice';\nimport { selectAllUsers } from '../users/usersSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const users = useSelector(selectAllUsers);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChange = e => setUserId(e.target.value);\n\n  //const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle('');\n      setContent('');\n    }\n  };\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postsTitle\",\n        children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        type: \"button\",\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(AddPostForm, \"WScYcH5GtB2Rd+ktAxm/dps9+Hc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postAdded","addNewPost","selectAllUsers","AddPostForm","dispatch","title","setTitle","content","setContent","userId","setUserId","addRequestStatus","setAddRequestStatus","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChange","canSave","every","Boolean","onSavePostClicked","usersOptions","map","user","id","name"],"sources":["/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/AddPostForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { postAdded } from './postsSlice';\nimport { addNewPost } from './postsSlice';\nimport { selectAllUsers } from '../users/usersSlice';\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChange = e => setUserId(e.target.value);\n\n\n  //const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n  const onSavePostClicked = () => {\n    if (title && content) {\n        dispatch(\n            postAdded(title, content, userId)\n        )\n        setTitle('');\n        setContent('');\n    }\n  };\n\n  const usersOptions = users.map(user => (\n    <option key={user.id} value={user.id}>\n        {user.name}\n    </option>\n  ));\n\n  return (\n  <section>\n    <h2>Добавить новый пост</h2>\n    <form>\n        <label htmlFor=\"postsTitle\">Название поста:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        <label htmlFor=\"postAuthor\">Автор:</label>\n        <select \n          id=\"postAuthor\" \n          value={userId}\n          onChange={onAuthorChange} >\n            <option value=\"\"></option>\n            {usersOptions}\n        </select>\n        <label htmlFor=\"postContent\">Содержание:</label>\n        <textarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n        <button \n          onClick={onSavePostClicked} \n          disabled={!canSave}\n          type=\"button\">Сохранить пост</button>\n    </form>\n  </section>\n  )\n}\n\nexport default AddPostForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}