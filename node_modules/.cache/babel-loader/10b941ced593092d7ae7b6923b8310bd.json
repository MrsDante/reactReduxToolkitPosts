{"ast":null,"code":"var _jsxFileName = \"/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAllPosts, getPostsStatus, getPostsError, fetchPosts } from './postsSlice';\nimport { useEffect } from 'react';\nimport PostsExcerpt from './PostsExcerpt';\nimport PostAuthor from './PostAuthor';\nimport TimeAgo from './TimeAgo';\nimport ReactionButtons from './ReactionButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(selectAllPosts);\n  const postsStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]);\n  const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n  const renderedPosts = orderedPosts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"postCredit\",\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), renderedPosts]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsList, \"xOfALbeNiurMcSA9N+vFr+Uoyrc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","selectAllPosts","getPostsStatus","getPostsError","fetchPosts","useEffect","PostsExcerpt","PostAuthor","TimeAgo","ReactionButtons","PostsList","dispatch","posts","postsStatus","error","orderedPosts","slice","sort","a","b","date","localeCompare","renderedPosts","map","post","title","content","substring","userId","id"],"sources":["/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/PostsList.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectAllPosts, getPostsStatus, getPostsError, fetchPosts } from './postsSlice';\nimport { useEffect } from 'react';\nimport PostsExcerpt from './PostsExcerpt';\n\nimport PostAuthor from './PostAuthor';\nimport TimeAgo from './TimeAgo';\nimport ReactionButtons from './ReactionButtons';\n\nconst PostsList = () => {\n  const dispatch = useDispatch();\n\n  const posts = useSelector(selectAllPosts);\n  const postsStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]);\n\n  const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date))\n\n  const renderedPosts = orderedPosts.map((post) => (\n    <article key={post.id}>\n      <h3>{post.title}</h3>\n      <p>{post.content.substring(0,100)}</p>\n      <p className=\"postCredit\">\n        <PostAuthor userId={post.userId} />\n        <TimeAgo timestamp={post.date} />\n      </p>\n      <ReactionButtons post={post} />\n    </article>\n  ));\n\n  return (\n    <section>\n        <h2>Посты</h2>\n        {renderedPosts}\n    </section>\n  )\n}\n\nexport default PostsList;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAEC,UAAU,QAAQ,cAAc;AACxF,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,mBAAmB;AAAC;AAEhD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,KAAK,GAAGb,WAAW,CAACE,cAAc,CAAC;EACzC,MAAMY,WAAW,GAAGd,WAAW,CAACG,cAAc,CAAC;EAC/C,MAAMY,KAAK,GAAGf,WAAW,CAACI,aAAa,CAAC;EAExCE,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAW,KAAK,MAAM,EAAE;MAC1BF,QAAQ,CAACP,UAAU,EAAE,CAAC;IACxB;EACF,CAAC,EAAE,CAACS,WAAW,EAAEF,QAAQ,CAAC,CAAC;EAE3B,MAAMI,YAAY,GAAGH,KAAK,CAACI,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC,CAAC;EAE/E,MAAME,aAAa,GAAGP,YAAY,CAACQ,GAAG,CAAEC,IAAI,iBAC1C;IAAA,wBACE;MAAA,UAAKA,IAAI,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAA,UAAID,IAAI,CAACE,OAAO,CAACC,SAAS,CAAC,CAAC,EAAC,GAAG;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eACtC;MAAG,SAAS,EAAC,YAAY;MAAA,wBACvB,QAAC,UAAU;QAAC,MAAM,EAAEH,IAAI,CAACI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC,QAAC,OAAO;QAAC,SAAS,EAAEJ,IAAI,CAACJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,eACJ,QAAC,eAAe;MAAC,IAAI,EAAEI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,GAPnBA,IAAI,CAACK,EAAE;IAAA;IAAA;IAAA;EAAA,QAStB,CAAC;EAEF,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,EACbP,aAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACR;AAEd,CAAC;AAAA,GAjCKZ,SAAS;EAAA,QACIV,WAAW,EAEdD,WAAW,EACLA,WAAW,EACjBA,WAAW;AAAA;AAAA,KALrBW,SAAS;AAmCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}