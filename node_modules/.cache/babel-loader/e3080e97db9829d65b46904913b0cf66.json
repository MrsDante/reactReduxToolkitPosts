{"ast":null,"code":"var _jsxFileName = \"/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { getPostsStatus, getPostsError, selectPostIds } from './postsSlice';\n//import { useEffect } from 'react';\nimport PostsExcerpt from './PostsExcerpt';\n\n//selectPostIds,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const orderedPostIds = useSelector(selectPostIds);\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    content = orderedPostIds.map(postId => /*#__PURE__*/_jsxDEV(PostsExcerpt, {\n      postId: postId\n    }, postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 46\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n_s(PostsList, \"uejUxRqY5Q0TjWZsqSDle0thT3Q=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","getPostsStatus","getPostsError","selectPostIds","PostsExcerpt","PostsList","orderedPostIds","postStatus","error","content","map","postId"],"sources":["/Users/MrsDante/Desktop/React/reactReduxToolkitPosts/src/features/posts/PostsList.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { getPostsStatus, getPostsError, selectPostIds } from './postsSlice';\n//import { useEffect } from 'react';\nimport PostsExcerpt from './PostsExcerpt';\n\n//selectPostIds,\nconst PostsList = () => {\n\n  const orderedPostIds = useSelector(selectPostIds)\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n\n  let content;\n  if (postStatus === 'loading') {\n      content = <p>\"Загрузка...\"</p>;\n  } else if (postStatus === 'succeeded') {\n      content = orderedPostIds.map(postId => <PostsExcerpt key={postId} postId={postId} />)\n  } else if (postStatus === 'failed') {\n      content = <p>{error}</p>;\n  }\n\n  return (\n      <section>\n          {content}\n      </section>\n  )\n}\n\nexport default PostsList;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,EAAEC,aAAa,EAAEC,aAAa,QAAQ,cAAc;AAC3E;AACA,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA;AACA,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEtB,MAAMC,cAAc,GAAGN,WAAW,CAACG,aAAa,CAAC;EACjD,MAAMI,UAAU,GAAGP,WAAW,CAACC,cAAc,CAAC;EAC9C,MAAMO,KAAK,GAAGR,WAAW,CAACE,aAAa,CAAC;EAExC,IAAIO,OAAO;EACX,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC1BE,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB;EAClC,CAAC,MAAM,IAAIF,UAAU,KAAK,WAAW,EAAE;IACnCE,OAAO,GAAGH,cAAc,CAACI,GAAG,CAACC,MAAM,iBAAI,QAAC,YAAY;MAAc,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAoB,CAAC;EACzF,CAAC,MAAM,IAAIJ,UAAU,KAAK,QAAQ,EAAE;IAChCE,OAAO,gBAAG;MAAA,UAAID;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC5B;EAEA,oBACI;IAAA,UACKC;EAAO;IAAA;IAAA;IAAA;EAAA,QACF;AAEhB,CAAC;AAAA,GApBKJ,SAAS;EAAA,QAEUL,WAAW,EACfA,WAAW,EAChBA,WAAW;AAAA;AAAA,KAJrBK,SAAS;AAsBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}